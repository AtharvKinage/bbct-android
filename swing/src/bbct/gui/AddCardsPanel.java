/*
 * This file is part of BBCT.
 *
 * Copyright 2012 codeguru <codeguru@users.sourceforge.net>
 *
 * BBCT is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * BBCT is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package bbct.gui;

import bbct.data.BaseballCard;
import bbct.data.BaseballCardIO;
import bbct.exceptions.BBCTIOException;
import bbct.exceptions.InputException;
import java.awt.CardLayout;
import java.awt.Container;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * This panel contains controls which allow the user to add data for baseball
 * cards to the underlying storage. The labels and text fields are delegated to
 * a [@link CardDetailsPanel}. This panel also contains buttons to add the
 * baseball card data to storage and to go back to the main menu of the BBCT
 * application.
 *
 * @author codeguru <codeguru@users.sourceforge.net>
 *
 * TODO: Instructions not correct after clicking Add Card button
 *
 */
public class AddCardsPanel extends javax.swing.JPanel {

    /**
     * Creates a new {@link AddCardsPanel}.
     */
    public AddCardsPanel() {
        initComponents();
    }

    /**
     * Creates a new {@link AddCardsPanel}.
     *
     * @param bcio The {@link BaseballCardIO} object which is used to add
     * baseball card data to the underlying persistent storage mechanism.
     */
    public AddCardsPanel(BaseballCardIO bcio) {
        this.bcio = bcio;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardDetailsPanel = new CardDetailsPanel(true);
        javax.swing.JPanel buttonsPanel = new javax.swing.JPanel();
        addCardButton = new javax.swing.JButton();
        javax.swing.JButton backButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(375, 400));
        setPreferredSize(new java.awt.Dimension(375, 400));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(new java.awt.BorderLayout());

        cardDetailsPanel.setMinimumSize(new java.awt.Dimension(375, 500));
        cardDetailsPanel.setPreferredSize(new java.awt.Dimension(375, 500));
        add(cardDetailsPanel, java.awt.BorderLayout.CENTER);

        addCardButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addCardButton.setText("Add Card");
        addCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCardButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(addCardButton);

        backButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(backButton);

        add(buttonsPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.cardDetailsPanel.reset();

        Container parent = this.getParent();
        CardLayout cl = (CardLayout) parent.getLayout();

        cl.show(parent, BBCTFrame.MENU_CARD_NAME);
    }//GEN-LAST:event_backButtonActionPerformed

    private void addCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCardButtonActionPerformed
        try {
            BaseballCard card = this.cardDetailsPanel.getBaseballCard();
            this.bcio.insertBaseballCard(card);
            this.cardDetailsPanel.reset();

            BBCTFrame frame = (BBCTFrame) this.getTopLevelAncestor();
            frame.setInstructions("Card added. Enter brand name for another card.");
        } catch (BBCTIOException ex) {
            Logger.getLogger(AddCardsPanel.class.getName()).log(Level.SEVERE, "Storage I/O error.", ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "I/O Error", JOptionPane.ERROR_MESSAGE);
        } catch (InputException ex) {
            Logger.getLogger(AddCardsPanel.class.getName()).log(Level.INFO, "Invalid input", ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(AddCardsPanel.class.getName()).log(Level.SEVERE, "Unexpected Exception", ex);
            JOptionPane.showMessageDialog(this, ex, "Unexpected Exception", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addCardButtonActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        Container topLevelAncestor = this.getTopLevelAncestor();

        if (topLevelAncestor instanceof BBCTFrame) {
            BBCTFrame frame = (BBCTFrame) topLevelAncestor;
            frame.setTitle(GUIResources.ADD_CARDS_PANEL_TITLE);
            frame.setDefaultButton(this.addCardButton);
        }
    }//GEN-LAST:event_formAncestorAdded
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCardButton;
    private bbct.gui.CardDetailsPanel cardDetailsPanel;
    // End of variables declaration//GEN-END:variables
    private BaseballCardIO bcio = null;
}
