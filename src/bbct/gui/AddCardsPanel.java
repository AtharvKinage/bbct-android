package bbct.gui;

import bbct.data.BaseballCard;
import bbct.data.BaseballCardIO;
import bbct.exceptions.IOException;
import bbct.exceptions.InputException;
import java.awt.CardLayout;
import java.awt.Container;
import javax.swing.JOptionPane;

/**
 * TODO: JavaDoc
 *
 * TODO: yearTextBox should be limited to only 4 digits
 *
 * TODO: All text boxes which take integer input need to display an error
 * message when input is incorrect.
 *
 * TODO: Integer input must be non-negative
 *
 * TODO: When error occurs, request focus on appropriate text field
 * 
 * TODO: Update instructions as user interacts with interface
 * 
 * @author codeguru <codeguru@users.sourceforge.net>
 */
public class AddCardsPanel extends javax.swing.JPanel {

    /**
     * Creates new AddCardsPanel
     */
    public AddCardsPanel() {
        initComponents();
    }

    /**
     * Creates a new AddCardsPanel.
     * @param bcio 
     */
    public AddCardsPanel(BaseballCardIO bcio) {
        this.bcio = bcio;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardDetailsPanel = new CardDetailsPanel(true);
        javax.swing.JPanel buttonsPanel = new javax.swing.JPanel();
        javax.swing.JButton addButton = new javax.swing.JButton();
        javax.swing.JButton backButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(375, 400));
        setPreferredSize(new java.awt.Dimension(375, 400));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        cardDetailsPanel.setMinimumSize(new java.awt.Dimension(375, 500));
        cardDetailsPanel.setPreferredSize(new java.awt.Dimension(375, 500));
        add(cardDetailsPanel, java.awt.BorderLayout.CENTER);

        addButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addButton.setText("Add Card");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(addButton);

        backButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(backButton);

        add(buttonsPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.cardDetailsPanel.reset();

        Container parent = this.getParent();
        CardLayout cl = (CardLayout) parent.getLayout();

        cl.show(parent, BBCTFrame.MENU_CARD_NAME);
    }//GEN-LAST:event_backButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        BBCTFrame frame = (BBCTFrame)this.getTopLevelAncestor();
        
        frame.setTitle(GUIResources.ADD_CARDS_PANEL_TITLE);
        frame.setInstructions("Enter data for a baseball card.");
    }//GEN-LAST:event_formComponentShown

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            BaseballCard card = this.cardDetailsPanel.getBaseballCard();
            this.bcio.insertBaseballCard(card);
            this.cardDetailsPanel.reset();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "I/O Error", JOptionPane.ERROR_MESSAGE);
        } catch (InputException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "Exception", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private bbct.gui.CardDetailsPanel cardDetailsPanel;
    // End of variables declaration//GEN-END:variables
    private BaseballCardIO bcio = null;
}
