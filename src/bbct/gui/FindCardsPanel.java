/*
 * This file is part of BBCT.
 *
 * Copyright 2012 codeguru <codeguru@users.sourceforge.net>
 *
 * BBCT is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * BBCT is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package bbct.gui;

import bbct.data.BaseballCard;
import bbct.data.BaseballCardIO;
import bbct.exceptions.IOException;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Container;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * TODO: JavaDoc
 *
 * @author codeguru <codeguru@users.sourceforge.net>
 */
public class FindCardsPanel extends javax.swing.JPanel {

    /**
     * Creates new {@link FindCardsPanel}.
     */
    public FindCardsPanel() {
        initComponents();
    }

    /**
     * Creates new {@link FindCardsPanel}.
     *
     * @param bcio The {@link BaseballCardIO} object which is used to search for
     * baseball cards using the criteria input by the user.
     * @param inputPanel The panel containing input controls which vary
     * depending on the exact criteria used to search for cards.
     */
    public FindCardsPanel(BaseballCardIO bcio, FindCardsByPanel inputPanel) {
        this.bcio = bcio;
        this.inputPanel = inputPanel;

        initComponents();

        this.add(this.inputPanel, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel buttonsPanel = new javax.swing.JPanel();
        findButton = new javax.swing.JButton();
        javax.swing.JButton backButton = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(new java.awt.BorderLayout());

        findButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(findButton);

        backButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        buttonsPanel.add(backButton);

        add(buttonsPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        Container parent = this.getParent();
        CardLayout cl = (CardLayout) parent.getLayout();

        cl.show(parent, BBCTFrame.FIND_CARDS_MENU_CARD_NAME);
    }//GEN-LAST:event_backButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        try {
            List<BaseballCard> cards = this.inputPanel.getBaseballCards();

            if (cards.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No cards found.", "No cards found.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JPanel editCardsPanel = new EditCardsPanel(cards, this.bcio);
                Container parent = this.getParent();
                CardLayout cl = (CardLayout) parent.getLayout();

                parent.add(editCardsPanel, BBCTFrame.EDIT_CARDS_PANEL_NAME);
                cl.show(parent, BBCTFrame.EDIT_CARDS_PANEL_NAME);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "I/O Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        Container topLevelAncestor = this.getTopLevelAncestor();

        if (topLevelAncestor instanceof BBCTFrame) {
            BBCTFrame frame = (BBCTFrame) topLevelAncestor;
            frame.setDefaultButton(this.findButton);
        }
    }//GEN-LAST:event_formAncestorAdded
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton findButton;
    // End of variables declaration//GEN-END:variables
    private BaseballCardIO bcio = null;
    private FindCardsByPanel inputPanel = null;
}
